/*
 * Copyright (C) 2021 University Hospital Bonn - All Rights Reserved You may use, distribute and
 * modify this code under the GPL 3 license. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT
 * PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
 * OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR
 * IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH
 * YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR
 * OR CORRECTION. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY
 * COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE,
 * BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES
 * ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA
 * OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE
 * PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGES. You should have received a copy of the GPL 3 license with *
 * this file. If not, visit http://www.gnu.de/documents/gpl-3.0.en.html
 */

package de.medizininformatik_initiative.process.report.listener;

import static de.medizininformatik_initiative.process.report.ConstantsReport.BPMN_EXECUTION_VARIABLE_DASHBOARD_REPORT_DDP_JSON_RESPONSE_REFERENCE;
import static de.medizininformatik_initiative.process.report.ConstantsReport.CODESYSTEM_VOTING_PROCESS_VALUE_BINARY_QUESTION;

import java.util.Optional;

import org.camunda.bpm.engine.delegate.DelegateTask;
import org.hl7.fhir.r4.model.IdType;
import org.hl7.fhir.r4.model.QuestionnaireResponse;

import de.medizininformatik_initiative.process.report.ConstantsReport;
import dev.dsf.bpe.v1.ProcessPluginApi;
import dev.dsf.bpe.v1.activity.DefaultUserTaskListener;
import dev.dsf.bpe.v1.variables.Variables;

public class ApproveDashboardBinaryListener extends DefaultUserTaskListener
{
	private ProcessPluginApi api;

	public ApproveDashboardBinaryListener(ProcessPluginApi api)
	{
		super(api);
		this.api = api;
	}

	@Override
	protected void beforeQuestionnaireResponseCreate(DelegateTask userTask, QuestionnaireResponse beforeCreate)
	{
		Variables variables = api.getVariables(userTask.getExecution());

		String url = variables.getString(BPMN_EXECUTION_VARIABLE_DASHBOARD_REPORT_DDP_JSON_RESPONSE_REFERENCE);
		String question = "The DashboardReport plugin generated the JSON file (" + url
				+ ") via the DashboardDataProcessor (DDP) installed at your location. Please check this file and decide whether to send it to the NUM dashboard. Click \"Yes\" if the file should be sent, or click \"No\" if it should not be sent and to delete the JSON file. You can use the plugin's environment variable \"DE_NETZWERK_UNIVERSITAETSMEDIZIN_DASHBOARD_REPORT_DDP_APPROVAL\" to specify that all automatically generated files are sent to the NUM dashboard without an explicit manual check.";

		Optional<QuestionnaireResponse.QuestionnaireResponseItemComponent> displayItem = beforeCreate.getItem().stream()
				.filter(i -> i.getLinkId().equals(CODESYSTEM_VOTING_PROCESS_VALUE_BINARY_QUESTION)).findFirst();

		displayItem
				.ifPresent(questionnaireResponseItemComponent -> questionnaireResponseItemComponent.setText(question));
	}

	@Override
	protected void afterQuestionnaireResponseCreate(DelegateTask userTask, QuestionnaireResponse afterCreate)
	{
		Variables variables = api.getVariables(userTask.getExecution());

		String ddpBinary = variables
				.getString(ConstantsReport.BPMN_EXECUTION_VARIABLE_DASHBOARD_REPORT_DDP_JSON_RESPONSE_REFERENCE);
		IdType binaryId = new IdType(ddpBinary);
		String ref = binaryId.getResourceType() + "/" + binaryId.getIdPart();

		String url = api.getQuestionnaireResponseHelper().getLocalVersionlessAbsoluteUrl(afterCreate);
		variables.setString(
				ConstantsReport.BPMN_EXECUTION_VARIABLE_DASHBOARD_REPORT_DDP_APPROVAL_QUESTIONNAIRERESPONSE_REFERENCE,
				url);

		String subject = "Approval of DDP data - " + ref;
		String message = "Please authorise the sending of the DDP data automatically generated by the DashboardReport plug-in to the NUM dashboard. To do this, please use the questionnaire provided at the following link, where you can also view the prepared DDP data: "
				+ url;

		api.getMailService().send(subject, message);
	}
}
